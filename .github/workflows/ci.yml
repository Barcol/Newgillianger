name: CI

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: false
          working-directory: backend

      - name: Debug current directory
        run: |
          pwd
          ls -la

      - name: Debug file existence
        run: |
          if [ -f Gemfile ]; then echo "Gemfile found"; else echo "Gemfile NOT found"; fi

      - name: Update RubyGems
        run: gem update --system 3.3.22

      - name: Install Bundler
        run: gem install bundler

      - name: Configure bundler path
        run: bundle config set path vendor/bundle
      
      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      - name: Security scan
        run: bundle exec brakeman -p . --no-pager --no-exit-on-warn

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: false
          working-directory: backend

      - name: Update RubyGems
        run: gem update --system 3.3.22

      - name: Install Bundler
        run: gem install bundler

      - name: Configure bundler path
        run: bundle config set path vendor/bundle
      
      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      - name: Lint code for consistent style
        run: |
          echo "Files with offenses:"
          bundle exec rubocop --format files
          echo "Detailed offenses:"
          bundle exec rubocop --format progress --format offenses
          bundle exec rubocop -f github

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Debug current directory
        run: |
          pwd
          ls -la
    
      - name: Debug file existence
        run: |
          if [ -f Gemfile ]; then echo "Gemfile found"; else echo "Gemfile NOT found"; fi
    
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client
    
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: false
    
      - name: Update RubyGems
        run: gem update --system 3.3.22
    
      - name: Install Bundler
        run: gem install bundler
    
      - name: Configure bundler path
        run: bundle config set path vendor/bundle
    
      - name: Install gems
        run: bundle install --jobs 4 --retry 3
  
      - name: Database setup
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
  
      - name: Run RSpec tests
        run: bundle exec rspec
  
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/backend/tmp/screenshots
          if-no-files-found: ignore
